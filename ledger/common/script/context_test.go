// Copyright 2025 Blink Labs Software
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package script

import (
	"encoding/hex"
	"errors"
	"fmt"
	"regexp"
	"strings"
	"testing"

	"github.com/blinklabs-io/gouroboros/cbor"
	"github.com/blinklabs-io/gouroboros/ledger/babbage"
	"github.com/blinklabs-io/gouroboros/ledger/common"
	lcommon "github.com/blinklabs-io/gouroboros/ledger/common"
	"github.com/blinklabs-io/gouroboros/ledger/conway"
	"github.com/blinklabs-io/gouroboros/ledger/shelley"
	"github.com/blinklabs-io/plutigo/data"
)

func formatPlutusData(pd data.PlutusData) string {
	var builder strings.Builder
	pdStr := pd.String()
	indentLevel := 0
	needsNewline := false
	for _, c := range pdStr {
		if c == ' ' && needsNewline {
			builder.WriteString("\n" + strings.Repeat(` `, indentLevel*4))
			continue
		}
		needsNewline = false
		if c == '{' || c == '[' {
			indentLevel++
			needsNewline = true
		}
		if c == '}' || c == ']' {
			indentLevel--
			builder.WriteString("\n" + strings.Repeat(` `, indentLevel*4))
			needsNewline = true
		}
		if c == ')' {
			needsNewline = true
		}
		if c == ',' {
			needsNewline = true
		}
		builder.WriteRune(c)
		if needsNewline {
			builder.WriteString("\n" + strings.Repeat(` `, indentLevel*4))
		}
	}
	ret := builder.String()
	// Strip out empty lines
	tmpRe := regexp.MustCompile(`\n +\n`)
	ret = tmpRe.ReplaceAllString(ret, "\n")
	return ret
}

func buildTxInfoV3(
	txHex string,
	inputsHex string,
	inputOutputsHex string,
) (TxInfo, error) {
	// Transaction
	txBytes, err := hex.DecodeString(txHex)
	if err != nil {
		return nil, fmt.Errorf("decode transaction hex: %w", err)
	}
	tx, err := conway.NewConwayTransactionFromCbor(txBytes)
	if err != nil {
		return nil, err
	}
	// Inputs
	inputsBytes, err := hex.DecodeString(inputsHex)
	if err != nil {
		return nil, fmt.Errorf("decode inputs hex: %w", err)
	}
	var tmpInputs []shelley.ShelleyTransactionInput
	if _, err := cbor.Decode(inputsBytes, &tmpInputs); err != nil {
		return nil, fmt.Errorf("decode inputs: %w", err)
	}
	// Input outputs
	inputOutputsBytes, err := hex.DecodeString(inputOutputsHex)
	if err != nil {
		return nil, fmt.Errorf("decode input outputs hex: %w", err)
	}
	var tmpOutputs []babbage.BabbageTransactionOutput
	if _, err := cbor.Decode(inputOutputsBytes, &tmpOutputs); err != nil {
		return nil, fmt.Errorf("decode input outputs: %w", err)
	}
	// Build resolved inputs
	var resolvedInputs []lcommon.Utxo
	if len(tmpInputs) != len(tmpOutputs) {
		return nil, errors.New("input and output length don't match")
	}
	for i := range tmpInputs {
		resolvedInputs = append(
			resolvedInputs,
			lcommon.Utxo{
				Id:     tmpInputs[i],
				Output: tmpOutputs[i],
			},
		)
	}
	// Build TxInfo
	txInfo := NewTxInfoV3FromTransaction(tx, resolvedInputs)
	return txInfo, nil
}

var scriptContextV3TestDefs = []struct {
	name          string
	txHex         string
	inputsHex     string
	outputsHex    string
	redeemerTag   common.RedeemerTag
	redeemerIndex uint32
	expectedCbor  string
}{
	{
		name:          "SimpleSend",
		txHex:         `84a70081825820000000000000000000000000000000000000000000000000000000000000000000018182581d60111111111111111111111111111111111111111111111111111111111a3b9aca0002182a0b5820ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0d818258200000000000000000000000000000000000000000000000000000000000000000001082581d60000000000000000000000000000000000000000000000000000000001a3b9aca001101a20581840000d87980821a000f42401a05f5e100078152510101003222253330044a229309b2b2b9a1f5f6`,
		inputsHex:     `81825820000000000000000000000000000000000000000000000000000000000000000000`,
		outputsHex:    `81a300581d7039f47fd3b388ef53c48f08de24766d3e55dade6cae908cc24e0f4f3e011a3b9aca00028201d81843d87980`,
		redeemerTag:   common.RedeemerTagSpend,
		redeemerIndex: 0,
		expectedCbor:  `d8799fd8799f9fd8799fd8799f5820000000000000000000000000000000000000000000000000000000000000000000ffd8799fd8799fd87a9f581c39f47fd3b388ef53c48f08de24766d3e55dade6cae908cc24e0f4f3effd87a80ffa140a1401a3b9aca00d87b9fd87980ffd87a80ffffff809fd8799fd8799fd8799f581c11111111111111111111111111111111111111111111111111111111ffd87a80ffa140a1401a3b9aca00d87980d87a80ffff182aa080a0d8799fd8799fd87980d87a80ffd8799fd87b80d87a80ffff80a1d87a9fd8799f5820000000000000000000000000000000000000000000000000000000000000000000ffffd87980a0582078ec148ea647cf9969446891af31939c5d57b275a2455706782c6183ef0b62f1a080d87a80d87a80ffd87980d87a9fd8799f5820000000000000000000000000000000000000000000000000000000000000000000ffd8799fd87980ffffff`,
	},
	{
		name: "Mint",
		txHex: "84a9008182582000000000000000000000000000000000000000000000000000" +
			"00000000000000000183a300581d600000000000000000000000000000000000" +
			"0000000000000000000000011a000f42400282005820923918e403bf43c34b4e" +
			"f6b48eb2ee04babed17320d8d1b9ff9ad086e86f44eca2005839000000000000" +
			"0000000000000000000000000000000000000000000000000000000000000000" +
			"0000000000000000000000000000000000000001821a000f4240a2581c12593b" +
			"4cbf7fdfd8636db99fe356437cd6af8539aadaa0a401964874a14474756e611b" +
			"00005af3107a4000581c0c8eaf490c53afbf27e3d84a3b57da51fbafe5aa7844" +
			"3fcec2dc262ea14561696b656e182aa300583910000000000000000000000000" +
			"0000000000000000000000000000000000000000000000000000000000000000" +
			"00000000000000000000000001821a000f4240a1581c0c8eaf490c53afbf27e3" +
			"d84a3b57da51fbafe5aa78443fcec2dc262ea14763617264616e6f0103d81847" +
			"82034463666f6f02182a09a2581c12593b4cbf7fdfd8636db99fe356437cd6af" +
			"8539aadaa0a401964874a14474756e611b00005af3107a4000581c0c8eaf490c" +
			"53afbf27e3d84a3b57da51fbafe5aa78443fcec2dc262ea24763617264616e6f" +
			"014561696b656e2d0b5820ffffffffffffffffffffffffffffffffffffffffff" +
			"ffffffffffffffffffffff0d8182582000000000000000000000000000000000" +
			"00000000000000000000000000000000001082581d6000000000000000000000" +
			"0000000000000000000000000000000000001a3b9aca00110112818258200000" +
			"00000000000000000000000000000000000000000000000000000000000000a3" +
			"0582840100d87980821a000f42401a05f5e100840101182a821a000f42401a05" +
			"f5e1000481d879800782587d587b010100323232323232322533333300800115" +
			"3330033370e900018029baa001153330073006375400224a6660089445261533" +
			"0054911856616c696461746f722072657475726e65642066616c736500136560" +
			"02002002002002002153300249010b5f746d70323a20566f696400165734ae71" +
			"55ceaab9e5573eae915895589301010032323232323232253333330080011533" +
			"30033370e900018029baa001153330073006375400224a666008a6600a920110" +
			"5f5f5f5f5f6d696e745f325f5f5f5f5f0014a22930a99802a4811856616c6964" +
			"61746f722072657475726e65642066616c736500136560020020020020020021" +
			"53300249010b5f746d70323a20566f696400165734ae7155ceaab9e5573eae91" +
			"f5f6",
		inputsHex:     "81825820000000000000000000000000000000000000000000000000000000000000000000",
		outputsHex:    "81a200581d6000000000000000000000000000000000000000000000000000000000011a000f4240",
		redeemerTag:   common.RedeemerTagMint,
		redeemerIndex: 1,
		expectedCbor:  "d8799fd8799f9fd8799fd8799f5820000000000000000000000000000000000000000000000000000000000000000000ffd8799fd8799fd8799f581c00000000000000000000000000000000000000000000000000000000ffd87a80ffa140a1401a000f4240d87980d87a80ffffff9fd8799fd8799f5820000000000000000000000000000000000000000000000000000000000000000000ffd8799fd8799fd8799f581c00000000000000000000000000000000000000000000000000000000ffd87a80ffa140a1401a000f4240d87980d87a80ffffff9fd8799fd8799fd8799f581c00000000000000000000000000000000000000000000000000000000ffd87a80ffa140a1401a000f4240d87a9f5820923918e403bf43c34b4ef6b48eb2ee04babed17320d8d1b9ff9ad086e86f44ecffd87a80ffd8799fd8799fd8799f581c00000000000000000000000000000000000000000000000000000000ffd8799fd8799fd8799f581c00000000000000000000000000000000000000000000000000000000ffffffffa340a1401a000f4240581c0c8eaf490c53afbf27e3d84a3b57da51fbafe5aa78443fcec2dc262ea14561696b656e182a581c12593b4cbf7fdfd8636db99fe356437cd6af8539aadaa0a401964874a14474756e611b00005af3107a4000d87980d87a80ffd8799fd8799fd87a9f581c00000000000000000000000000000000000000000000000000000000ffd8799fd8799fd8799f581c00000000000000000000000000000000000000000000000000000000ffffffffa240a1401a000f4240581c0c8eaf490c53afbf27e3d84a3b57da51fbafe5aa78443fcec2dc262ea14763617264616e6f01d87980d8799f581c68ad54b3a8124d9fe5caaaf2011a85d72096e696a2fb3d7f86c41717ffffff182aa2581c0c8eaf490c53afbf27e3d84a3b57da51fbafe5aa78443fcec2dc262ea24561696b656e2d4763617264616e6f01581c12593b4cbf7fdfd8636db99fe356437cd6af8539aadaa0a401964874a14474756e611b00005af3107a400080a0d8799fd8799fd87980d87a80ffd8799fd87b80d87a80ffff80a2d8799f581c0c8eaf490c53afbf27e3d84a3b57da51fbafe5aa78443fcec2dc262effd87980d8799f581c12593b4cbf7fdfd8636db99fe356437cd6af8539aadaa0a401964874ff182aa15820923918e403bf43c34b4ef6b48eb2ee04babed17320d8d1b9ff9ad086e86f44ecd879805820e757985e48e43a95a185ddba08c814bc20f81cb68544ac937a9b992e4e6c38a0a080d87a80d87a80ff182ad8799f581c12593b4cbf7fdfd8636db99fe356437cd6af8539aadaa0a401964874ffff",
	},
	{
		name:          "SendWithRequiredSigners",
		txHex:         "84a90081825820c9f355431b2546acfc03b11540dc8bee31b9afc5674081a61cc39e0845380e7a000181825839009fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e505064b671634d14cb8d543e71dd8eb437a47efb47b0b22882866c420d1a009569e4021a00032c9c0b5820b460412e9073d311f8ebbc4e931ca4cb709d491b5d50d06b6bfede0a959eba1b0d81825820c9f355431b2546acfc03b11540dc8bee31b9afc5674081a61cc39e0845380e7a010e81581c9fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e5010825839009fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e505064b671634d14cb8d543e71dd8eb437a47efb47b0b22882866c420d821b00000001f6b06007a7581c0d26f1decee50c24498585cb9cba2b6aa629c83023b327bb10fb67b9a14c4d696e7457697468647261770e581c22691d3d969ecf5802226290c2fb98e2bc08522d5b726c1f5f400105a3534275726e61626c65546f6b656e506c75747573014454657374181c5820accbfb633f637e3bb1abee40c9539d1effd742cd2716b3b1db9de3aaf3f3779401581c61d96f9000bf5d325da17258ee0693e19d441cecee64825289ee6b7da14c4d696e74576974686472617701581c966a0d009812f82bf198cfa1329602f48e0f600cff430de75ca90fc5a1476d79746f6b656e01581ccac67dd80f706e084b2aac605288b2ff793475ea43b2313e1ed384aba14454657374182a581cef6ed47a6917a3cbbeb46561e8853da969343794d66128598a34af2ca34d4275726e61626c65546f6b656e18574e4275726e61626c65546f6b656e3218f35820accbfb633f637e3bb1abee40c9539d1effd742cd2716b3b1db9de3aaf3f3779401581cf654f6a31f6c4cc2c39a169f2c022404aa9f19d43137b0448b219a3ea144546573741823111a004c4b4012818258204f184460ae3f3c15c6811f1380c3abc7bb73bf3cbbdffe874913c2410fc3577600a200818258200abb7b89e091dcd3201aea501854a4cb05290862d88b6eb30afa6dfd23f5446758403ccad89397ca9e583ae03b072b9ddf3b9c3840cde959339afc5c7c88d9a33b92599336baf7c46876806babfa04dd1b2bf7b77d35a4780b56eb5400d30dc908090581840000d8799f4d48656c6c6f2c20576f726c6421ff82196def1a0087f824f5f6",
		inputsHex:     "82825820c9f355431b2546acfc03b11540dc8bee31b9afc5674081a61cc39e0845380e7a008258204f184460ae3f3c15c6811f1380c3abc7bb73bf3cbbdffe874913c2410fc3577600",
		outputsHex:    "82a400581d70fdd6640d1c9a4392dd7e829f0cc4e26766539c48b2cf594959e33559011a00989680028201d8185822d8799f581c9fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e50ff03d81859010b820359010659010301010032323232323225333002323232323253330073370e900118041baa0011323232533300a3370e900018059baa00513232533300f30110021533300c3370e900018069baa003132533300d3371e6eb8c044c03cdd50042450d48656c6c6f2c20576f726c642100100114a06644646600200200644a66602600229404c94ccc044cdc79bae301500200414a2266006006002602a0026eb0c040c044c044c044c044c044c044c044c044c038dd50049bae3010300e37546020601c6ea800c5858dd7180780098061baa00516300d300e002300c001300937540022c6014601600460120026012004600e00260086ea8004526136565734aae7555cf2ab9f5742ae89a400581d70fdd6640d1c9a4392dd7e829f0cc4e26766539c48b2cf594959e33559011a00989680028201d8185822d8799f581c86b74c779bb9cf43532b357323b0ced1bdd6aa4276c45aee845f33feff03d81859010b820359010659010301010032323232323225333002323232323253330073370e900118041baa0011323232533300a3370e900018059baa00513232533300f30110021533300c3370e900018069baa003132533300d3371e6eb8c044c03cdd50042450d48656c6c6f2c20576f726c642100100114a06644646600200200644a66602600229404c94ccc044cdc79bae301500200414a2266006006002602a0026eb0c040c044c044c044c044c044c044c044c044c038dd50049bae3010300e37546020601c6ea800c5858dd7180780098061baa00516300d300e002300c001300937540022c6014601600460120026012004600e00260086ea8004526136565734aae7555cf2ab9f5742ae89",
		redeemerTag:   common.RedeemerTagSpend,
		redeemerIndex: 0,
		expectedCbor:  "d8799fd8799f9fd8799fd8799f5820c9f355431b2546acfc03b11540dc8bee31b9afc5674081a61cc39e0845380e7a00ffd8799fd8799fd87a9f581cfdd6640d1c9a4392dd7e829f0cc4e26766539c48b2cf594959e33559ffd87a80ffa140a1401a00989680d87b9fd8799f581c9fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e50ffffd8799f581cfdd6640d1c9a4392dd7e829f0cc4e26766539c48b2cf594959e33559ffffffff9fd8799fd8799f58204f184460ae3f3c15c6811f1380c3abc7bb73bf3cbbdffe874913c2410fc3577600ffd8799fd8799fd87a9f581cfdd6640d1c9a4392dd7e829f0cc4e26766539c48b2cf594959e33559ffd87a80ffa140a1401a00989680d87b9fd8799f581c86b74c779bb9cf43532b357323b0ced1bdd6aa4276c45aee845f33feffffd8799f581cfdd6640d1c9a4392dd7e829f0cc4e26766539c48b2cf594959e33559ffffffff9fd8799fd8799fd8799f581c9fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e50ffd8799fd8799fd8799f581c5064b671634d14cb8d543e71dd8eb437a47efb47b0b22882866c420dffffffffa140a1401a009569e4d87980d87a80ffff1a00032c9ca080a0d8799fd8799fd87980d87a80ffd8799fd87b80d87a80ffff9f581c9fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e50ffa1d87a9fd8799f5820c9f355431b2546acfc03b11540dc8bee31b9afc5674081a61cc39e0845380e7a00ffffd8799f4d48656c6c6f2c20576f726c6421ffa05820ac73d6545da30a8cc0395de0c2a5fa3ad99329f41d319901ebe2922f8554d5e3a080d87a80d87a80ffd8799f4d48656c6c6f2c20576f726c6421ffd87a9fd8799f5820c9f355431b2546acfc03b11540dc8bee31b9afc5674081a61cc39e0845380e7a00ffd8799fd8799f581c9fc430ea1f3adc20eebb813b2649e85c934ea5bc13d7b7fbe2b24e50ffffffff",
	},
}

func TestScriptContextV3(t *testing.T) {
	for _, testDef := range scriptContextV3TestDefs {
		t.Run(
			testDef.name,
			func(t *testing.T) {
				txInfo, err := buildTxInfoV3(
					testDef.txHex,
					testDef.inputsHex,
					testDef.outputsHex,
				)
				if err != nil {
					t.Fatalf("unexpected error: %s", err)
				}

				// Extract purpose and redeemer from TxInfo
				var purpose ScriptInfo
				var redeemer Redeemer
				for _, redeemerPair := range txInfo.(TxInfoV3).Redeemers {
					if redeemerPair.Value.Tag == testDef.redeemerTag &&
						redeemerPair.Value.Index == testDef.redeemerIndex {
						purpose = redeemerPair.Key
						redeemer = redeemerPair.Value
						break
					}
				}
				// Build script context
				sc := NewScriptContextV3(txInfo, redeemer, purpose)
				scCbor, err := data.Encode(sc.ToPlutusData())
				if err != nil {
					t.Fatalf("unexpected error: %s", err)
				}
				scCborHex := hex.EncodeToString(scCbor)
				if scCborHex != testDef.expectedCbor {
					t.Fatalf(
						"did not get expected ScriptContext CBOR\n     got: %s\n  wanted: %s",
						scCborHex,
						testDef.expectedCbor,
					)
				}
			},
		)
	}
}
